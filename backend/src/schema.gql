# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ActiveRoom {
  createdAt: DateTime!
  numParticipants: Int!
  participantNames: [String!]!
  roomName: String!
}

type Commercial {
  age: Int!
  createdAt: DateTime!
  directeurId: Int
  email: String!
  id: Int!
  immeubles: [Immeuble!]!
  managerId: Int
  nom: String!
  numTel: String!
  prenom: String!
  statistics: [Statistic!]!
  updatedAt: DateTime!
  zones: [Zone!]!
}

type CommercialZoneRelation {
  commercialId: Int!
  createdAt: DateTime!
  id: Int!
  zoneId: Int!
}

input CreateCommercialInput {
  age: Int!
  directeurId: Int
  email: String!
  managerId: Int
  nom: String!
  numTel: String!
  prenom: String!
}

input CreateDirecteurInput {
  adresse: String!
  email: String!
  nom: String!
  numTelephone: String!
  prenom: String!
}

input CreateImmeubleInput {
  adresse: String!
  ascenseurPresent: Boolean!
  commercialId: Int!
  digitalCode: String
  nbEtages: Int!
  nbPortesParEtage: Int!
  zoneId: Int
}

input CreateManagerInput {
  directeurId: Int
  email: String
  nom: String!
  numTelephone: String
  prenom: String!
}

input CreatePorteInput {
  commentaire: String
  derniereVisite: DateTime
  etage: Int!
  immeubleId: Int!
  nbRepassages: Int! = 0
  nomPersonnalise: String
  numero: String!
  rdvDate: DateTime
  rdvTime: String
  statut: StatutPorte! = NON_VISITE
}

input CreateStatisticInput {
  commercialId: Int
  contratsSignes: Int!
  immeubleId: Int
  immeublesVisites: Int!
  nbImmeublesProspectes: Int!
  nbPortesProspectes: Int!
  refus: Int!
  rendezVousPris: Int!
  zoneId: Int
}

input CreateZoneInput {
  directeurId: Int
  managerId: Int
  nom: String!
  rayon: Float!
  xOrigin: Float!
  yOrigin: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Directeur {
  adresse: String!
  createdAt: DateTime!
  email: String!
  id: Int!
  nom: String!
  numTelephone: String!
  prenom: String!
  updatedAt: DateTime!
}

type EgressState {
  egressId: String!
  error: String
  roomName: String
  status: String!
}

type Immeuble {
  adresse: String!
  ascenseurPresent: Boolean!
  commercialId: Int
  createdAt: DateTime!
  digitalCode: String
  id: Int!
  nbEtages: Int!
  nbPortesParEtage: Int!
  portes: [Porte!]
  updatedAt: DateTime!
  zoneId: Int
}

type LiveKitConnectionDetails {
  participantName: String!
  participantToken: String!
  roomName: String!
  serverUrl: String!
}

type Manager {
  createdAt: DateTime!
  directeurId: Int
  email: String
  id: Int!
  nom: String!
  numTelephone: String
  prenom: String!
  updatedAt: DateTime!
}

type MonitoringSession {
  commercialId: Int!
  endedAt: DateTime
  id: ID!
  participantToken: String
  roomName: String!
  startedAt: DateTime!
  status: MonitoringStatus!
  supervisorId: Int!
}

enum MonitoringStatus {
  ACTIVE
  PAUSED
  STOPPED
}

type Mutation {
  addEtageToImmeuble(id: Int!): Immeuble!
  addPorteToEtage(etage: Int!, immeubleId: Int!): Immeuble!
  assignZoneToCommercial(commercialId: Int!, zoneId: Int!): Boolean!
  assignZoneToDirecteur(directeurId: Int!, zoneId: Int!): Boolean!
  assignZoneToManager(managerId: Int!, zoneId: Int!): Boolean!
  createCommercial(createCommercialInput: CreateCommercialInput!): Commercial!
  createDirecteur(createDirecteurInput: CreateDirecteurInput!): Directeur!
  createImmeuble(createImmeubleInput: CreateImmeubleInput!): Immeuble!
  createManager(createManagerInput: CreateManagerInput!): Manager!
  createPorte(createPorteInput: CreatePorteInput!): Porte!
  createPortesForImmeuble(immeubleId: Int!, nbEtages: Int!, nbPortesParEtage: Int!): Boolean!
  createStatistic(createStatisticInput: CreateStatisticInput!): Statistic!
  createZone(createZoneInput: CreateZoneInput!): Zone!
  generateCommercialToken(commercialId: Int!, roomName: String): LiveKitConnectionDetails!
  removeCommercial(id: Int!): Commercial!
  removeDirecteur(id: Int!): Directeur!
  removeEtageFromImmeuble(id: Int!): Immeuble!
  removeImmeuble(id: Int!): Immeuble!
  removeManager(id: Int!): Manager!
  removePorte(id: Int!): Porte!
  removePorteFromEtage(etage: Int!, immeubleId: Int!): Immeuble!
  removeStatistic(id: Int!): Statistic!
  removeZone(id: Int!): Zone!
  startMonitoring(input: StartMonitoringInput!): LiveKitConnectionDetails!
  startRecording(input: StartRecordingInput!): RecordingResult!
  stopMonitoring(input: StopMonitoringInput!): Boolean!
  stopRecording(input: StopRecordingInput!): Boolean!
  unassignZoneFromCommercial(commercialId: Int!, zoneId: Int!): Boolean!
  updateCommercial(updateCommercialInput: UpdateCommercialInput!): Commercial!
  updateCommercialHeartbeat(commercialId: Int!): Boolean!
  updateDirecteur(updateDirecteurInput: UpdateDirecteurInput!): Directeur!
  updateImmeuble(updateImmeubleInput: UpdateImmeubleInput!): Immeuble!
  updateManager(updateManagerInput: UpdateManagerInput!): Manager!
  updatePorte(updatePorteInput: UpdatePorteInput!): Porte!
  updateStatistic(updateStatisticInput: UpdateStatisticInput!): Statistic!
  updateZone(updateZoneInput: UpdateZoneInput!): Zone!
}

type Porte {
  commentaire: String
  createdAt: DateTime!
  derniereVisite: DateTime
  etage: Int!
  id: Int!
  immeubleId: Int!
  nbRepassages: Int!
  nomPersonnalise: String
  numero: String!
  rdvDate: DateTime
  rdvTime: String
  statut: StatutPorte!
  updatedAt: DateTime!
}

type Query {
  commercial(id: Int!): Commercial!
  commercials(userId: Int, userRole: String): [Commercial!]!
  directeur(id: Int!): Directeur!
  directeurs(userId: Int, userRole: String): [Directeur!]!
  egressState(egressId: String!): EgressState!
  getActiveRooms: [ActiveRoom!]!
  getActiveSessions: [MonitoringSession!]!
  getCommercialConnection(commercialId: Int!, roomName: String): LiveKitConnectionDetails!
  getStreamingUrl(key: String!): String!
  immeuble(id: Int!): Immeuble!
  immeubles(userId: Int, userRole: String): [Immeuble!]!
  listRecordings(roomName: String!): [RecordingItem!]!
  manager(id: Int!): Manager!
  managers(userId: Int, userRole: String): [Manager!]!
  porte(id: Int!): Porte!
  portes: [Porte!]!
  portesByImmeuble(immeubleId: Int!): [Porte!]!
  statistic(id: Int!): Statistic!
  statistics(commercialId: Int, userId: Int, userRole: String): [Statistic!]!
  zone(id: Int!): Zone!
  zoneStatistics(userId: Int, userRole: String): [ZoneStatistic!]!
  zones(userId: Int, userRole: String): [Zone!]!
}

type RecordingItem {
  key: String!
  lastModified: DateTime
  size: Float
  url: String
}

type RecordingResult {
  egressId: String!
  roomName: String!
  s3Key: String!
  status: String!
  url: String
}

input StartMonitoringInput {
  commercialId: Int!
  roomName: String
  supervisorId: Int!
}

input StartRecordingInput {
  audioOnly: Boolean = true
  participantIdentity: String
  roomName: String!
}

type Statistic {
  commercialId: Int
  contratsSignes: Int!
  createdAt: DateTime!
  id: Int!
  immeubleId: Int
  immeublesVisites: Int!
  nbImmeublesProspectes: Int!
  nbPortesProspectes: Int!
  refus: Int!
  rendezVousPris: Int!
  updatedAt: DateTime!
  zoneId: Int
}

"""Statut possible pour une porte"""
enum StatutPorte {
  CONTRAT_SIGNE
  CURIEUX
  NECESSITE_REPASSAGE
  NON_VISITE
  REFUS
  RENDEZ_VOUS_PRIS
}

input StopMonitoringInput {
  sessionId: ID!
}

input StopRecordingInput {
  egressId: String!
}

input UpdateCommercialInput {
  age: Int
  directeurId: Int
  email: String
  id: Int!
  managerId: Int
  nom: String
  numTel: String
  prenom: String
}

input UpdateDirecteurInput {
  adresse: String
  email: String
  id: Int!
  nom: String
  numTelephone: String
  prenom: String
}

input UpdateImmeubleInput {
  adresse: String
  ascenseurPresent: Boolean
  commercialId: Int
  digitalCode: String
  id: Int!
  nbEtages: Int
  nbPortesParEtage: Int
  zoneId: Int
}

input UpdateManagerInput {
  directeurId: Int
  email: String
  id: Int!
  nom: String
  numTelephone: String
  prenom: String
}

input UpdatePorteInput {
  commentaire: String
  derniereVisite: DateTime
  etage: Int
  id: Int!
  nbRepassages: Int
  nomPersonnalise: String
  numero: String
  rdvDate: DateTime
  rdvTime: String
  statut: StatutPorte
}

input UpdateStatisticInput {
  commercialId: Int
  contratsSignes: Int
  id: Int!
  immeubleId: Int
  immeublesVisites: Int
  nbImmeublesProspectes: Int
  nbPortesProspectes: Int
  refus: Int
  rendezVousPris: Int
  zoneId: Int
}

input UpdateZoneInput {
  directeurId: Int
  id: Int!
  managerId: Int
  nom: String
  rayon: Float
  xOrigin: Float
  yOrigin: Float
}

type Zone {
  commercials: [CommercialZoneRelation!]
  createdAt: DateTime!
  directeurId: Int
  id: Int!
  immeubles: [Immeuble!]
  managerId: Int
  nom: String!
  rayon: Float!
  updatedAt: DateTime!
  xOrigin: Float!
  yOrigin: Float!
}

type ZoneStatistic {
  nombreCommerciaux: Int!
  performanceGlobale: Float!
  tauxConversion: Float!
  tauxSuccesRdv: Float!
  totalContratsSignes: Int!
  totalImmeublesProspectes: Int!
  totalImmeublesVisites: Int!
  totalPortesProspectes: Int!
  totalRefus: Int!
  totalRendezVousPris: Int!
  zoneId: Int!
  zoneName: String!
}